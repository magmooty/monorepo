name: Deploy desktop app

on:
  push:
    branches:
      - main
    paths:
      - apps/desktop/**/*
      - apps/telegram-bot/**/*
      - apps/telegram-macros/**/*
      - .github/workflows/deploy-desktop.yml

jobs:
  bump-version:
    name: Bump app version
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - uses: Swatinem/rust-cache@v2

      - name: Install cargo workspaces
        run: cargo install cargo-workspaces

      - name: Set git identity
        run: |
          git config --global user.email "actions@magmooty.com"
          git config --global user.name "GitHub Actions"

      - name: Bump version
        run: cargo workspaces version patch --no-git-tag -y
        working-directory: ./apps/desktop/src-tauri

  publish-tauri:
    name: Build and publish desktop app
    needs: bump-version
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: "x64"
            platform: "windows-latest"
            args: ""
            target: x86_64-pc-windows-msvc
            binaries-suffix: "x86_64"
          - arch: "x86"
            platform: "windows-latest"
            args: "--target i686-pc-windows-msvc"
            target: i686-pc-windows-msvc
            binaries-suffix: "i686"

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21
          cache: "pnpm"
          cache-dependency-path: apps/desktop/pnpm-lock.yaml

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.75.0
          target: ${{ matrix.target }}
          override: true

      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "${{ matrix.target }}-desktop-deploy"

      - name: Install frontend dependencies
        run: pnpm install
        working-directory: ./apps/desktop

      - name: vcpkg build ${{ matrix.arch }}
        uses: johnwason/vcpkg-action@v6
        id: vcpkg
        with:
          pkgs: openssl:${{ matrix.arch }}-windows
          triplet: ${{ matrix.arch }}-windows
          token: ${{ github.token }}
          cache-key: vcpkg-cache-${{ matrix.arch }}-windows
          github-binarycache: true

      - name: Copy binaries because Rust is being weird
        run: |
          cp ./apps/desktop/src-tauri/binaries/windows-i686/Packet.lib ./apps/desktop/src-tauri/binaries/windows-x86_64/Packet.lib
        if: matrix.arch == 'x86'

      - name: Setup production environment variables
        run: |
          echo "VITE_CENTRAL_API_BASE_URL=https://magmooty-api.fly.dev" >> ./apps/desktop/.env
          echo "VITE_REMOTE_SURREAL_URL=https://magmooty-surrealdb.fly.dev/rpc" >> ./apps/desktop/.env

      - name: Copy dlls for vcruntime and openssl
        run: |
          rm ./apps/desktop/src-tauri/binaries/build-libs/dummy.dll
          cp ./apps/desktop/src-tauri/binaries/windows-${{ matrix.binaries-suffix }}/vcruntime/*.dll ./apps/desktop/src-tauri/binaries/build-libs/
          cp ./apps/desktop/src-tauri/binaries/windows-${{ matrix.binaries-suffix }}/openssl/*.dll ./apps/desktop/src-tauri/binaries/build-libs/
          cp ./apps/desktop/src-tauri/binaries/windows-${{ matrix.binaries-suffix }}/winpcap/*.dll ./apps/desktop/src-tauri/binaries/build-libs/

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          X86_64_PC_WINDOWS_MSVC_OPENSSL_DIR: ${{ github.workspace }}/vcpkg/packages/openssl_x64-windows
          I686_PC_WINDOWS_MSVC_OPENSSL_DIR: ${{ github.workspace }}/vcpkg/packages/openssl_x86-windows
        with:
          tagName: app-__VERSION__
          releaseName: "App __VERSION__"
          releaseBody: "See the assets to download this version and install."
          projectPath: "./apps/desktop"
          distPath: "./apps/desktop/build"
          args: ${{ matrix.args }}
